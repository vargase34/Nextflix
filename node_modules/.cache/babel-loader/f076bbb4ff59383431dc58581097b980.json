{"ast":null,"code":"var _jsxFileName = \"/Users/eman/Documents/my-app/Nextflix/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = 'https://image.tmdb.org/t/p/original/';\n\nlet Row = function ({\n  title,\n  fetchUrl\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]); // a snippet of code which runs based on a specific condition/variable\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies); //when row loads, i want to make a request to tdmb to load movies\n  // if(movies === undefined){\n  //     movies = []\n  // }\n\n  console.clear();\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${base_url}${movie.poster_path}`,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/eman/Documents/my-app/Nextflix/src/Row.js"],"names":["React","useState","useEffect","axios","base_url","Row","title","fetchUrl","movies","setMovies","fetchData","request","get","data","results","console","log","clear","map","movie","poster_path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;;AAEA,IAAIC,GAAG,GAAG,UAAU;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAV,EAA+B;AAAA;;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CADqC,CAGrC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUL,QAAV,CAAtB;AACAE,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GAPQ,EAON,CAACH,QAAD,CAPM,CAAT;AASAQ,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ,EAbqC,CAerC;AAEA;AACA;AACA;;AACAO,EAAAA,OAAO,CAACE,KAAR;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAGKE,MAAM,CAACU,GAAP,CAAWC,KAAK,iBACb;AAAK,QAAA,GAAG,EAAG,GAAEf,QAAS,GAAEe,KAAK,CAACC,WAAY,EAA1C;AAA6C,QAAA,GAAG,EAAED,KAAK,CAACb;AAAxD;AAAA;AAAA;AAAA;AAAA,cADH;AAHL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAlCD;;GAAID,G;;KAAAA,G;AAoCJ,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from './axios'\n\nconst base_url = 'https://image.tmdb.org/t/p/original/'\n\nlet Row = function ({ title, fetchUrl }) {\n    const [movies, setMovies] = useState([])\n\n    // a snippet of code which runs based on a specific condition/variable\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl)\n            setMovies(request.data.results)\n            return request\n        }\n        fetchData()\n    }, [fetchUrl])\n\n    console.log(movies)\n\n    //when row loads, i want to make a request to tdmb to load movies\n\n    // if(movies === undefined){\n    //     movies = []\n    // }\n    console.clear()\n    console.log(movies)\n    return (\n        <div className='row'>\n            <h2>{title}</h2>\n            <div className='row__posters'>\n                {/* several row posters */}\n                \n                {movies.map(movie => \n                    <img src={`${base_url}${movie.poster_path}`} alt={movie.title} />\n            )}\n            </div>\n        </div>\n    )\n}\n\nexport default Row"]},"metadata":{},"sourceType":"module"}