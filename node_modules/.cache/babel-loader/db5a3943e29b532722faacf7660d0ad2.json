{"ast":null,"code":"var _jsxFileName = \"/Users/eman/Documents/my-app/Nextflix/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport requests from './requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet Row = function ({\n  title,\n  fetchUrl\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]); // a snippet of code which runs based on a specific condition/variable\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      console.log(request.data.results);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies); //when row loads, i want to make a request to tdmb to load movies\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(x => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this) // <img src={movie.poster_path} alt={movie.name} />\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/eman/Documents/my-app/Nextflix/src/Row.js"],"names":["React","useState","useEffect","axios","requests","Row","title","fetchUrl","movies","setMovies","fetchData","request","get","console","log","data","results","map","x"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,IAAIC,GAAG,GAAG,UAAU;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAV,EAA8B;AAAA;;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CADoC,CAGpC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUL,QAAV,CAAtB;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,IAAR,CAAaC,OAAzB;AACAP,MAAAA,SAAS,CAACE,OAAO,CAACI,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOL,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GATQ,EASN,CAACH,QAAD,CATM,CAAT;AAWAM,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ,EAfoC,CAiBpC;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAEKE,MAAM,CAACS,GAAP,CAAWC,CAAC,iBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,CAET;AAFH;AAFL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA/BD;;GAAIb,G;;KAAAA,G;AAiCJ,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from './axios'\nimport requests from './requests'\n\nlet Row = function ({ title, fetchUrl }){\n    const [movies, setMovies] = useState([])\n\n    // a snippet of code which runs based on a specific condition/variable\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl)\n         \n            console.log(request.data.results)\n            setMovies(request.data.results)\n            return request\n        } \n        fetchData()\n    }, [fetchUrl]) \n\n    console.log(movies)\n\n    //when row loads, i want to make a request to tdmb to load movies\n\n    return (\n        <div className='row'>\n            <h2>{title}</h2>\n            <div className='row__posters'>\n                {/* several row posters */}\n                {movies.map(x => (\n                    <p>x</p>\n                    // <img src={movie.poster_path} alt={movie.name} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Row"]},"metadata":{},"sourceType":"module"}